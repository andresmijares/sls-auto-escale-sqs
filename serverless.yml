service: serverless-introduction-to-sqs

plugins: 
  - serverless-pseudo-parameters

custom:
  stage: ${opt:stage, self:provider.stage}

provider:
  name: aws
  runtime: nodejs6.10
  iamRoleStatements:
    - Effect: Allow
      Action: dynamodb:GetItem
      Resource: arn:aws:dynamodb:#{AWS::Region}:#{AWS::AccountId}:table/${self:custom.stage}_users
    - Effect: Allow
      Action: dynamodb:scan
      Resource: arn:aws:dynamodb:#{AWS::Region}:#{AWS::AccountId}:table/${self:custom.stage}_orders

functions:
  graphql:
    handler: functions/graphql.handler
    events:
      - http:
           path: /graphql
           method: post
    environment:
      tableOrders: ${self:custom.stage}_orders
      tableUsers: ${self:custom.stage}_users

resources:
  Resources:
    ordersTable:
      Type: AWS::DynamoDB::Table 
      Properties:
        TableName: ${self:custom.stage}_orders
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id 
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    
    usersTable:
      Type: AWS::DynamoDB::Table 
      Properties:
        TableName: ${self:custom.stage}_users
        AttributeDefinitions:
          - AttributeName: email
            AttributeType: S
        KeySchema:
          - AttributeName: email
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
